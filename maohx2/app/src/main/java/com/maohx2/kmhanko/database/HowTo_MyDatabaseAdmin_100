■クラス　MyDatabaseAdmin
・コンストラクタ引数
Context
・説明
MyDatabaseクラスのリストの実体を持ち、管理するクラス

・メソッド
int addMyDatabase(String db_name,String db_asset,int db_version,String load_mode)
    引数 :
        String db_name : データベースの名前。任意に決めて良いが、dbファイル名と同じにしておくと良い。
        String db_asset : データベースのファイル名
        int db_version : データベースのバージョン(今の所、特に意味はない。1にしておくこと)
        String load_mode : 読み込み方法。"r"で読み込み専用。"w"で読み書き両用。
    返り値 : 新たに登録したデータベースクラスのID
    説明 : 新たにデータベースを登録する。追加した順に0,1,2...とIDが割り振られる。

MyDatabase getMyDatabase(int i)
    引数 :
        int i : 獲得するデータベースのID
    説明 : addMyDatabaseメソッドで割り振られるIDを用いて、データベースを受け取る。

MyDatabase getMyDatabase(String name)
    引数 :
        String name : 検索するデータベースのID
    説明 : addMyDatabaseメソッドにて設定したdb_nameを用いて、データベースを受け取る。

void close()
    説明 : 全てのデータベースをクローズする。アプリ終了時に呼ぶのが望ましい。

・クラス使用例
@MainActicityにおける下準備
MyDatabaseAdmin database_admin = new MyDatabaseAdmin(this);//データベース準備
database_admin.addMyDatabase("item","item.db",1,"r");//データベース読み込み

@データベースを使いたい時　database_adminをコンストラクタ等で受け取っておく。
MyDatabase itemdb = database_admin.getMyDatabase("item");//データベースのクラスを受け取る

@データを読み出す
List<String> weapon_names = itemdb.getString("table_weapon","name");//武器の名前の一覧
List<Integer> weapon_attacks = itemdb.getString("table_weapon","attack");//武器の攻撃力の一覧